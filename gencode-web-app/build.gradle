
sourceSets {
    main {
        java {
            srcDir 'src'
           
        }
       
    }
    test {
        java {
            srcDir 'test'
        }
         resources{
        	srcDir 'resources'
        }
    }
    
}

dependencies {
    compile (
    
    [group: 'com.bbossgroups.gencode', name: 'gencode-core', version: "${version}", transitive: false],
            [group: 'com.bbossgroups.gencode', name: 'gencode-web', version: "${version}", transitive: false],
               [group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-util', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-data', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-core', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-persistent', version: "${bboss_version}", transitive: false],
              [group: 'com.bbossgroups', name: 'bboss-mvc', version: "${bboss_version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-velocity', version: "${bboss_version}", transitive: false],
                [group: 'com.bbossgroups.security', name: 'bboss-security', version: "${bboss_version}", transitive: false],
          [group: 'com.bbossgroups', name: 'bboss-soa', version: "${bboss_version}", transitive: false],
            
              [group: 'oro', name: 'oro', version: '2.0.8', transitive: false],
              [group: 'commons-lang', name: 'commons-lang', version: '2.6', transitive: false],
              [group: 'org.ow2.asm', name: 'asm', version: '5.0.3', transitive: false],
               [group: 'cglib', name: 'cglib-nodep', version: '3.1', transitive: false],
                  [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: "${jacksonversion}",transitive: false],
              [group: 'commons-logging', name: 'commons-logging', version: '1.1', transitive: false],
            [group: 'commons-collections', name: 'commons-collections', version: '3.2.1', transitive: false],
             [group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '3.1.2', transitive: false],
             [group: 'net.sourceforge.jtds', name: 'jtds', version: '1.3.1', transitive: false],
             [group: 'mysql', name: 'mysql-connector-java', version: "${mysqlconnectorversion}", transitive: false],
             [group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2', transitive: false],
              
               [group: 'com.bbossgroups', name: 'bboss-taglib', version: "${bboss_version}", transitive: false],
              [group: 'com.bbossgroups', name: 'bboss-htmlparser', version: "${bboss_version}", transitive: false],
             [group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1', transitive: false],
            [group: 'commons-io', name: 'commons-io', version: '2.4', transitive: false],
               [group: 'jstl', name: 'jstl', version: '1.2', transitive: false],
            
    )
     compile ( 
         fileTree(dir: '../lib/eclipse', include: '*.jar'),
         fileTree(dir: '../lib/jdbc', include: '**/*.jar'),
    	)
	runtime(
		[group: 'com.bbossgroups', name: 'bboss-rt', version: "${PROJ_BBOSS_VERSION}", transitive: false],
    )
    	
     compileOnly (            
          
            [group: 'javax.servlet', name: 'javax.servlet-api', version: "3.0.1", transitive: false],
            //[group: 'javax.servlet', name: 'jsp-api', version: '2.0', transitive: false],
            [group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1', transitive: false],
            
           [group: 'javax.el', name: 'javax.el-api', version: '2.2.1', transitive: false],
           [group: 'org.eclipse.jetty.aggregate', name: 'jetty-all-server', version: '8.1.19.v20160209', transitive: false],
           [group: 'org.eclipse.jetty.orbit', name: 'org.apache.jasper.glassfish', version: '2.2.2.v201112011158', transitive: false],
           [group: 'org.eclipse.jetty.orbit', name: 'javax.servlet.jsp', version: '2.2.0.v201112011158', transitive: false],
        
          [group: 'org.eclipse.jetty.orbit', name: 'org.apache.taglibs.standard.glassfish', version: '1.2.0.v201112081803', transitive: false],
           [group: 'org.eclipse.jetty.orbit', name: 'com.sun.el', version: '2.2.0.v201108011116', transitive: false],
           
          
    )
     
}
task warcopyWebRootFiles(type: Copy){
	 from 'WebRoot'
	 into 'build/dist/WebRoot'
	 
}

task warcopyJarFiles(type: Copy,dependsOn:'warcopyWebRootFiles'){
	 from configurations.compile + configurations.runtime  
	 into 'build/dist/WebRoot/WEB-INF/lib'
	 
}

project.tasks.warcopyJarFiles.dependsOn(project(':gencode-web').tasks.install)
project.tasks.compileJava.dependsOn(project(':gencode-web').tasks.install)
task warcopyResourceFiles(type: Copy,dependsOn:'warcopyJarFiles' ){
	 
	 from 'resources'   
	into 'build/dist/WebRoot/WEB-INF/classes'
	 
}


task copyLibFiles(type: Copy ){ 
	from fileTree(dir: '../lib', include: '**/*.jar')
	from configurations.compile + configurations.compileOnly 
	into 'build/dist/gencode/lib'
}
project.tasks.copyLibFiles.dependsOn(project(':gencode-web').tasks.install)
task copyResourceFiles(type: Copy ){ 
	from fileTree(dir: 'resources')
	into 'build/dist/gencode/resources'
}

task copyWebrootFiles(type: Copy ){ 
	from fileTree(dir: 'WebRoot')
	into 'build/dist/gencode/WebRoot'
}
task copyToolFiles(type: Copy ){
	 
	from ('runtime')
	{
		expand(bboss_version: "${PROJ_BBOSS_VERSION}",main_class:'org.frameworkset.gencode.web.service.JettyStart')
		
	} 
    from configurations.runtime - configurations.compile  
    //filteringCharset = 'UTF-8'            
	into 'build/dist/gencode'
	 
}
 
task releaseRuntimeZip(type: Zip,dependsOn:['copyToolFiles','copyWebrootFiles','copyResourceFiles','copyLibFiles']) {
    //appendix = 'wrapper'
   baseName='gencode'
   from 'build/dist/gencode'
   
}

task releaseRuntimeWar(type: Zip,dependsOn:'warcopyResourceFiles') {
    //appendix = 'wrapper'
  // classifier = 'released'
   extension = 'war'
   baseName='gencode'
   from 'build/dist/WebRoot'
   
}
