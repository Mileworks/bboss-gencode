apply plugin: "war"
sourceSets {
    main {
        java {
            srcDir 'src'
           
        }
        resources{
        	srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'test'
        }
         
    }
    
}
dependencies {
    compile (
    [group: 'com.bbossgroups.gencode', name: 'gencode-core', version: "${version}", transitive: false],
            [group: 'com.bbossgroups.gencode', name: 'gencode-web', version: "${version}", transitive: false],
               [group: 'com.bbossgroups', name: 'bboss-taglib', version: "${bboss_version}", transitive: false],
              [group: 'com.bbossgroups', name: 'bboss-htmlparser', version: "${bboss_version}", transitive: false],
             [group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1', transitive: false],
            [group: 'commons-io', name: 'commons-io', version: '1.3.2', transitive: false],
            
    )
     compile ( 
         fileTree(dir: '../lib/eclipse', include: '*.jar')
    	)
    	runtime(
    	[group: 'com.bbossgroups', name: 'bboss-rt', version: "${PROJ_BBOSS_VERSION}", transitive: false],
            )
    	
     providedRuntime (            
             [group: 'servletapi', name: 'servletapi', version: '2.4', transitive: false],
            [group: 'javax.servlet', name: 'jsp-api', version: '2.0', transitive: false],
            fileTree(dir: '../lib/jetty', include: '*.jar')
    )
     
}

task copyJarFiles(type: Copy,dependsOn:'jar'){
	 
	 from jar.outputs
	 from configurations.compile
	 into 'build/dist/lib'
	 
}


task copyResourceFiles(type: Copy ){
	 
	 from 'resources'   
	into 'build/dist/resources'
	 
}

 
task copyToolFiles(type: Copy ){
	 
	from ('runfiles')
	{
		expand(bboss_version: "${PROJ_BBOSS_VERSION}",main_class:'com.timesontransfar.mfsp.util.MongoUtil')
		
	} 
    from configurations.runtime - configurations.compile
    //filteringCharset = 'UTF-8'            
	into 'build/dist/'
	 
}
 
task releaseMongoDBDemo(type: Zip,dependsOn:['copyJarFiles','copyResourceFiles','copyToolFiles']) {
    //appendix = 'wrapper'
   classifier = 'released'
   from 'build/dist/'
   
}
