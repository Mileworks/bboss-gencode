apply plugin: "war"
sourceSets {
    main {
        java {
            srcDir 'src'
           
        }
        resources{
        	srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'test'
        }
         
    }
    
}
dependencies {
    compile (
    
    [group: 'com.bbossgroups.gencode', name: 'gencode-core', version: "${version}", transitive: false],
            [group: 'com.bbossgroups.gencode', name: 'gencode-web', version: "${version}", transitive: false],
               [group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-util', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-data', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-core', version: "${bboss_version}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-persistent', version: "${bboss_version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-velocity', version: "${bboss_version}", transitive: false],
                [group: 'com.bbossgroups.security', name: 'bboss-security', version: "${bboss_version}", transitive: false],
          [group: 'com.bbossgroups', name: 'bboss-soa', version: "${bboss_version}", transitive: false],
            
              [group: 'oro', name: 'oro', version: '2.0.8', transitive: false],
              [group: 'commons-lang', name: 'commons-lang', version: '2.6', transitive: false],
              [group: 'org.ow2.asm', name: 'asm', version: '5.0.3', transitive: false],
               [group: 'cglib', name: 'cglib-nodep', version: '3.1', transitive: false],
                  [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonversion}",transitive: false],
             [group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: "${jacksonversion}",transitive: false],
              [group: 'commons-logging', name: 'commons-logging', version: '1.1', transitive: false],
            [group: 'commons-collections', name: 'commons-collections', version: '3.2.1', transitive: false],
             [group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '3.1.2', transitive: false],
             [group: 'net.sourceforge.jtds', name: 'jtds', version: '1.3.1', transitive: false],
             [group: 'mysql', name: 'mysql-connector-java', version: '3.1.14', transitive: false],
             [group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2', transitive: false],
              
               [group: 'com.bbossgroups', name: 'bboss-taglib', version: "${bboss_version}", transitive: false],
              [group: 'com.bbossgroups', name: 'bboss-htmlparser', version: "${bboss_version}", transitive: false],
             [group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1', transitive: false],
            [group: 'commons-io', name: 'commons-io', version: '1.3.2', transitive: false],
            
    )
     compile ( 
         fileTree(dir: '../lib/eclipse', include: '*.jar')
    	)
    	runtime(
    	[group: 'com.bbossgroups', name: 'bboss-rt', version: "${PROJ_BBOSS_VERSION}", transitive: false],
            )
    	
     providedRuntime (            
             [group: 'servletapi', name: 'servletapi', version: '2.4', transitive: false],
            [group: 'javax.servlet', name: 'jsp-api', version: '2.0', transitive: false],
            fileTree(dir: '../lib/jetty', include: '*.jar')
    )
     
}

task copyJarFiles(type: Copy,dependsOn:'jar'){
	 
	 from jar.outputs
	 from configurations.compile
	 into 'build/dist/lib'
	 
}


task copyResourceFiles(type: Copy ){
	 
	 from 'resources'   
	into 'build/dist/resources'
	 
}

 
task copyToolFiles(type: Copy ){
	 
	from ('runfiles')
	{
		expand(bboss_version: "${PROJ_BBOSS_VERSION}",main_class:'com.timesontransfar.mfsp.util.MongoUtil')
		
	} 
    from configurations.runtime - configurations.compile
    //filteringCharset = 'UTF-8'            
	into 'build/dist/'
	 
}
 
task releaseRuntimeZip(type: Zip,dependsOn:['copyJarFiles','copyResourceFiles','copyToolFiles']) {
    //appendix = 'wrapper'
   classifier = 'released'
   from 'build/dist/'
   
}

task releaseRuntimeWar(type: Zip,dependsOn:['copyJarFiles','copyResourceFiles','copyToolFiles']) {
    //appendix = 'wrapper'
   classifier = 'released'
   from 'build/dist/'
   
}
